# Start from base image: basic linux or nvidia-cuda
# FROM nvidia/cuda:11.3.0-cudnn8-runtime-ubuntu20.04
ARG BASE_IMAGE
FROM ${BASE_IMAGE}
ARG TAG
# Setup Base
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
# add user defined pip installs
ENV PATH /dltk/.local/bin:/dltk/.local/lib/python3.8/site-packages/:$PATH
RUN apt-get update --fix-missing && apt-get install -y wget bzip2 git ca-certificates curl build-essential

# Install basics
WORKDIR /srv
RUN mkdir /dltk
COPY ./requirements_rapids500.txt /dltk/requirements_rapids500.txt
RUN pip install --no-cache-dir --upgrade -r /dltk/requirements_rapids500.txt

# Install modules
RUN jupyter labextension install dask-labextension && \
    jupyter serverextension enable --py --sys-prefix dask_labextension --user && \
    jupyter labextension enable --py widgetsnbextension && \
    jupyter lab clean

RUN apt-get update && apt-get upgrade -y
# Copy bootstrap entry point script
COPY bootstrap_rapids.sh /dltk/
COPY app /dltk/app
COPY notebooks /dltk/notebooks
# Install local DSDL supporting functions
RUN mkdir /dltk/packages
COPY package-dsdlsupport/dist/dsdlsupport-1.0.0.tar.gz /dltk/packages/dsdlsupport-1.0.0.tar.gz
RUN pip install /dltk/packages/dsdlsupport-1.0.0.tar.gz
# Copy certificates generated with
COPY config/dltk.key /dltk/.jupyter/dltk.key
COPY config/dltk.pem /dltk/.jupyter/dltk.pem
# Copy jupyter config
COPY config/jupyter_notebook_config.py /dltk/.jupyter/jupyter_notebook_config.py
# Since JupyterLab 3 jupyter server config needs to be set
COPY config/jupyter_server_config.py /dltk/.jupyter/jupyter_server_config.py
# Copy jupyter notebook conversion template to export python module
COPY config/jupyter_notebook_template.tpl /dltk/.jupyter/jupyter_notebook_conversion.tpl
COPY config/null.tpl /dltk/.jupyter/null.tpl
# Handle user rights
# Expose container port 5000 (MLTK Container Service) and 8888 (Notebook)
EXPOSE 5000 8888
# Define bootstrap as entry point to start container
ENTRYPOINT ["/dltk/bootstrap_rapids.sh"]