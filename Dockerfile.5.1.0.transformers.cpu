# Start from base image: basic linux or nvidia-cuda
ARG BASE_IMAGE
FROM ${BASE_IMAGE}
ARG TAG

# Setup Base
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
# add user defined pip installs
ENV PATH /dltk/.local/bin:/dltk/.local/lib/python3.9/site-packages/:$PATH
#ENV PATH /opt/conda/bin:$PATH
RUN curl -fsSL https://deb.nodesource.com/setup_current.x | bash -
RUN apt-get update --fix-missing && apt-get install -y wget bzip2 git ca-certificates nodejs build-essential

# Install basics
WORKDIR /srv
RUN mkdir /dltk
COPY ./requirements_transformers510_cpu.txt /dltk/requirements_transformers510_cpu.txt
RUN pip install --no-cache-dir --upgrade -r /dltk/requirements_transformers510_cpu.txt
RUN apt-get update && apt-get upgrade -y

# Install modules
RUN jupyter labextension enable --py widgetsnbextension && \
    jupyter lab clean

# Copy bootstrap entry point script
COPY bootstrap_fast.sh /dltk/
COPY app /dltk/app
COPY notebooks /dltk/notebooks

# Unzip basemodel files
RUN mkdir -p /dltk/app/data/classification/en
RUN mkdir -p /dltk/app/data/classification/jp
RUN mkdir -p /dltk/app/data/summarization/en
RUN mkdir -p /dltk/app/data/summarization/jp
ADD basemodels/class_en.tar.gz /dltk/app/model/data/classification/en
ADD basemodels/class_jp.tar.gz /dltk/app/model/data/classification/jp
ADD basemodels/sum_en.tar.gz /dltk/app/model/data/summarization/en
ADD basemodels/sum_jp.tar.gz /dltk/app/model/data/summarization/jp

# Install local DSDL supporting functions
RUN mkdir /dltk/packages
COPY package-dsdlsupport/dist/dsdlsupport-1.0.0.tar.gz /dltk/packages/dsdlsupport-1.0.0.tar.gz
RUN pip install /dltk/packages/dsdlsupport-1.0.0.tar.gz

# Copy certificates generated with
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout dltk.key -out dltk.pem
COPY config/dltk.key /dltk/.jupyter/dltk.key
COPY config/dltk.pem /dltk/.jupyter/dltk.pem
# Copy jupyter config
COPY config/jupyter_notebook_config.py /dltk/.jupyter/jupyter_notebook_config.py
# Since JupyterLab 3 jupyter server config needs to be set
COPY config/jupyter_server_config.py /dltk/.jupyter/jupyter_server_config.py
# TODO see if it makes sense to separate it with a specific jupyter_server_config.py 
# For now: shortcut with a copy of the notebook config

# Copy jupyter notebook conversion template to export python module
COPY config/jupyter_notebook_template.tpl /dltk/.jupyter/jupyter_notebook_conversion.tpl
COPY config/null.tpl /dltk/.jupyter/null.tpl

# Handle user rights
RUN chgrp -R 0 /dltk && \
    chmod -R g=u /dltk
RUN chgrp -R 0 /srv && \
    chmod -R g=u /srv
RUN chmod g+w /etc/passwd
USER 1001

# Expose container port 5000 (MLTK Container Service) and 8888 (Notebook)
EXPOSE 5000 8888

# Define bootstrap as entry point to start container
ENTRYPOINT ["/dltk/bootstrap_fast.sh"]
